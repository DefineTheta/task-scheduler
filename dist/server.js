/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./server/server.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./server/api/apiRouter.js":
/*!*********************************!*\
  !*** ./server/api/apiRouter.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _routes_worker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./routes/worker */ \"./server/api/routes/worker.js\");\nvar express = __webpack_require__(/*! express */ \"express\"); // Router function responsible for routing all the worker associated API endpoints\n\n\n // Router function responsible for routing all the manager associated API endpoints\n\nvar manager = __webpack_require__(/*! ./routes/manager */ \"./server/api/routes/manager.js\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n  // Router used to route to /api/v1/ endpoints\n  var apiRouter = express.Router();\n  Object(_routes_worker__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(apiRouter);\n  manager(apiRouter);\n  return apiRouter;\n});\n\n//# sourceURL=webpack:///./server/api/apiRouter.js?");

/***/ }),

/***/ "./server/api/baseRouter.js":
/*!**********************************!*\
  !*** ./server/api/baseRouter.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _routes_user__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./routes/user */ \"./server/api/routes/user.js\");\n/* harmony import */ var _routes_workspace__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./routes/workspace */ \"./server/api/routes/workspace.js\");\n/* harmony import */ var _routes_task__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./routes/task */ \"./server/api/routes/task.js\");\nvar express = __webpack_require__(/*! express */ \"express\"); // Router function responsible for routing all the user associated base endpoints\n\n\n // Router function responsible for routing all the workspace associated endpoints\n\n // Router function responsible for routing all the task associated endpoints\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n  // Router used to route to /api/v1/ endpoints\n  var baseRouter = express.Router();\n  Object(_routes_user__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(baseRouter);\n  Object(_routes_workspace__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(baseRouter);\n  Object(_routes_task__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(baseRouter);\n  return baseRouter;\n});\n\n//# sourceURL=webpack:///./server/api/baseRouter.js?");

/***/ }),

/***/ "./server/api/routes/manager.js":
/*!**************************************!*\
  !*** ./server/api/routes/manager.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var express = __webpack_require__(/*! express */ \"express\"); // Router used to route /api/v1/manager endpoints\n\n\nvar managerRouter = express.Router();\n\nmodule.exports = function (apiRouter) {\n  apiRouter.use('/manager', managerRouter); // Create a new manager account\n\n  managerRouter.post('/join', function (req, res) {\n    res.json({\n      account_type: 'manager'\n    });\n  }); // Login a manager account\n\n  managerRouter.post('/login', function (req, res) {\n    res.json({\n      account_type: 'manager'\n    });\n  }); // GET route used to retrive all the workspace a maanger belongs to\n\n  managerRouter.get('/workspaces', function (req, res) {\n    var workspaces = [{\n      id: 1,\n      name: '🎀 WOTBOS New York'\n    }, {\n      id: 2,\n      name: '📜 Quest Workspaces'\n    }, {\n      id: 3,\n      name: '🎶 The Farm SoHo NYC'\n    }];\n    res.json(workspaces);\n  }); // GET route used to retrive all the workers in a workspace a maanger belongs to\n\n  managerRouter.get('/workspaces/workers', function (req, res) {\n    var workers = [{\n      id: 1,\n      name: 'Amy Fischer'\n    }, {\n      id: 2,\n      name: 'Bob The Builder'\n    }, {\n      id: 3,\n      name: 'Tigger'\n    }];\n    res.json(workers);\n  }); // GET route used to retrive today's tasks\n\n  managerRouter.get('/tasks', function (req, res) {\n    if (req.query.timeline == 'today' || req.query.timeline == undefined) {\n      var tasks = [{\n        date: Math.round(new Date().getTime() / 1000),\n        tasks: [{\n          title: 'This is a manager test task',\n          user: 1,\n          completed: false\n        }, {\n          title: 'You have logged in as the manager',\n          user: 1,\n          completed: false,\n          color: 'red'\n        }, {\n          title: 'Muhahaahaha',\n          user: 3,\n          completed: false,\n          color: 'orange'\n        }, {\n          title: 'This one too',\n          user: 2,\n          completed: false,\n          color: 'purple'\n        }, {\n          title: 'Back to me again I should really clean the dishes',\n          user: 1,\n          completed: false,\n          color: 'green'\n        }, {\n          title: ':)',\n          user: 4,\n          completed: false\n        }]\n      }];\n      res.json(tasks);\n    } else if (req.query.timeline == 'week') {\n      var today = new Date();\n      var _tasks = [{\n        date: Math.round(today.getTime() / 1000),\n        tasks: [{\n          title: 'This is a test task',\n          user: 1,\n          completed: false\n        }, {\n          title: 'I have to do this taks today',\n          user: 1,\n          completed: false,\n          color: 'red'\n        }, {\n          title: 'This task is not assigned to me',\n          user: 3,\n          completed: false,\n          color: 'orange'\n        }, {\n          title: 'This one too',\n          user: 2,\n          completed: false,\n          color: 'purple'\n        }, {\n          title: 'Back to me again I should really clean the dishes',\n          user: 1,\n          completed: false,\n          color: 'green'\n        }, {\n          title: ':)',\n          user: 4,\n          completed: false\n        }]\n      }, {\n        date: Math.round(new Date(today.getFullYear(), today.getMonth(), today.getDate() + 2).getTime() / 1000),\n        tasks: [{\n          title: 'This is a task in 2 days',\n          user: 1,\n          completed: false,\n          color: 'red'\n        }, {\n          title: 'Looks like it is working',\n          user: 1,\n          completed: false\n        }, {\n          title: 'This is just dummy data',\n          user: 3,\n          completed: false,\n          color: 'orange'\n        }, {\n          title: 'This one too',\n          user: 2,\n          completed: false,\n          color: 'purple'\n        }, {\n          title: 'So do not worry about it',\n          user: 1,\n          completed: false\n        }, {\n          title: ':)',\n          user: 4,\n          completed: false\n        }]\n      }, {\n        date: Math.round(new Date(today.getFullYear(), today.getMonth(), today.getDate() + 3).getTime() / 1000),\n        tasks: [{\n          title: 'This is a task in 2 days',\n          user: 1,\n          completed: false,\n          color: 'red'\n        }, {\n          title: 'Looks like it is working',\n          user: 1,\n          completed: false\n        }, {\n          title: 'This is just dummy data',\n          user: 3,\n          completed: false,\n          color: 'orange'\n        }, {\n          title: 'This one too',\n          user: 2,\n          completed: false,\n          color: 'purple'\n        }, {\n          title: 'So do not worry about it',\n          user: 1,\n          completed: false\n        }, {\n          title: ':)',\n          user: 4,\n          completed: false\n        }]\n      }, {\n        date: Math.round(new Date(today.getFullYear(), today.getMonth(), today.getDate() + 5).getTime() / 1000),\n        tasks: [{\n          title: 'This is a task in 2 days',\n          user: 1,\n          completed: false,\n          color: 'red'\n        }, {\n          title: 'Looks like it is working',\n          user: 1,\n          completed: false\n        }, {\n          title: 'This is just dummy data',\n          user: 3,\n          completed: false,\n          color: 'orange'\n        }, {\n          title: 'This one too',\n          user: 2,\n          completed: false,\n          color: 'purple'\n        }, {\n          title: 'So do not worry about it',\n          user: 1,\n          completed: false\n        }, {\n          title: ':)',\n          user: 4,\n          completed: false\n        }]\n      }];\n      res.json(_tasks);\n    }\n  });\n};\n\n//# sourceURL=webpack:///./server/api/routes/manager.js?");

/***/ }),

/***/ "./server/api/routes/task.js":
/*!***********************************!*\
  !*** ./server/api/routes/task.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ \"express\");\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var express_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! express-validator */ \"express-validator\");\n/* harmony import */ var express_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(express_validator__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! Loaders/mysql */ \"./server/loaders/mysql.js\");\n/* harmony import */ var Loaders_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! Loaders/logger */ \"./server/loaders/logger.js\");\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n // Used to validate any params recieved from client\n\n // A poll of connections to MySQL database used to make queries\n\n // Import Winston logger instance to log messages to console\n\n\nvar taskRouter = express__WEBPACK_IMPORTED_MODULE_0___default.a.Router(); // Function used to format validation errors (if any)\n\nvar validationErrorFormatter = function validationErrorFormatter(_ref) {\n  var msg = _ref.msg;\n  return msg;\n}; // Custome validator to check if dates are valid\n\n\nvar isDate = function isDate(value) {\n  if (value === undefined || value === null) return false;\n  if (!value.match(/^\\d{2}-\\d{2}-\\d{4}$/)) return false;else return true;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (baseRouter) {\n  baseRouter.use('/task', taskRouter); // POST route used to create a new task\n\n  taskRouter.post('/', [// Check that task name is of valid length\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('task_name').isLength({\n    min: 4,\n    max: 255\n  }).withMessage('Task name must be at least 4 letters'), // Check that the task date is a valid date\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('task_date').custom(isDate).withMessage('Date provided is not in valid format'), //Check that assigned worker has a valid worker id\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('task_worker').isNumeric({\n    min: 0,\n    max: undefined\n  }).withMessage('Assigned user is not valid'), // Check that the color is not empty\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('task_color').isIn(['navy', 'red', 'orange', 'yellow', 'green', 'blue', 'teal', 'purple']).withMessage('Color provided is not allowed')], /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n      var session, validationErrors, _yield$MySQLPool$quer, _yield$MySQLPool$quer2, user_rows, _yield$MySQLPool$quer3, _yield$MySQLPool$quer4, worker_rows, date, _yield$MySQLPool$quer5, _yield$MySQLPool$quer6, availability_rows, group_id, _yield$MySQLPool$quer7, _yield$MySQLPool$quer8, rows;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              session = req.session;\n              validationErrors = Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"validationResult\"])(req).formatWith(validationErrorFormatter); // Check if the user is logged in or not and check if the user is a manager and that workspaceID exists in session\n\n              if (!(session.isUserLoggedIn !== true || session.userType !== 0 || session.workspaceID === undefined)) {\n                _context.next = 6;\n                break;\n              }\n\n              res.status(401).json({\n                success: false,\n                error: 'Unauthorized access'\n              });\n              _context.next = 55;\n              break;\n\n            case 6:\n              if (!(validationErrors.isEmpty() === false)) {\n                _context.next = 10;\n                break;\n              }\n\n              res.status(422).json({\n                errors: validationErrors.array()\n              });\n              _context.next = 55;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.next = 13;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query(\"CALL IsUserInWorkspace(?,?,?)\", [session.workspaceID, session.userID, 0]);\n\n            case 13:\n              _yield$MySQLPool$quer = _context.sent;\n              _yield$MySQLPool$quer2 = _slicedToArray(_yield$MySQLPool$quer, 1);\n              user_rows = _yield$MySQLPool$quer2[0];\n              _context.next = 18;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query(\"CALL IsUserInWorkspace(?,?,?)\", [session.workspaceID, req.body.task_worker, 1]);\n\n            case 18:\n              _yield$MySQLPool$quer3 = _context.sent;\n              _yield$MySQLPool$quer4 = _slicedToArray(_yield$MySQLPool$quer3, 1);\n              worker_rows = _yield$MySQLPool$quer4[0];\n\n              if (!(user_rows[0][0].count !== 1)) {\n                _context.next = 25;\n                break;\n              }\n\n              res.status(401).json({\n                error: 'Unauthorized access'\n              });\n              _context.next = 49;\n              break;\n\n            case 25:\n              if (!(worker_rows[0][0].count !== 1)) {\n                _context.next = 29;\n                break;\n              }\n\n              res.status(422).json({\n                errors: ['Assigned worker invalid']\n              });\n              _context.next = 49;\n              break;\n\n            case 29:\n              date = new Date();\n              date.setDate(Number(req.body.task_date.slice(0, 2)));\n              date.setMonth(Number(req.body.task_date.slice(3, 5)) - 1);\n              date.setYear(Number(req.body.task_date.slice(6, 10))); // Run a stored procedure to retrieve assigned worker's availability\n\n              _context.next = 35;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query(\"CALL GetWorkerAvailabilty(?)\", [req.body.task_worker]);\n\n            case 35:\n              _yield$MySQLPool$quer5 = _context.sent;\n              _yield$MySQLPool$quer6 = _slicedToArray(_yield$MySQLPool$quer5, 1);\n              availability_rows = _yield$MySQLPool$quer6[0];\n\n              if (!(availability_rows[0].length === 0 || availability_rows[0][0].availability.charAt(date.getDay() - 1) === '0')) {\n                _context.next = 42;\n                break;\n              }\n\n              res.status(422).json({\n                errors: ['Assigned worker can not work on this date']\n              });\n              _context.next = 49;\n              break;\n\n            case 42:\n              group_id = req.body.task_group_id === null || req.body.task_group_id < 0 ? -1 : req.body.task_group_id; // Run a stored procedure to create a new task\n\n              _context.next = 45;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query('CALL NewTask(?,?,?,?,?,?)', [session.workspaceID, req.body.task_worker, group_id, req.body.task_name, req.body.task_color, req.body.task_date]);\n\n            case 45:\n              _yield$MySQLPool$quer7 = _context.sent;\n              _yield$MySQLPool$quer8 = _slicedToArray(_yield$MySQLPool$quer7, 1);\n              rows = _yield$MySQLPool$quer8[0];\n\n              // Check if the task was actually created in database\n              if (rows.affectedRows === 0) {\n                res.status(400).json({\n                  errors: ['Task was not created']\n                });\n              } else {\n                // A way to redirect when using XHTTP\n                res.setHeader('xhttp-redirect', '/scheduler');\n                res.sendStatus(200);\n              }\n\n            case 49:\n              _context.next = 55;\n              break;\n\n            case 51:\n              _context.prev = 51;\n              _context.t0 = _context[\"catch\"](10);\n              Loaders_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(_context.t0);\n              res.status(500).json({\n                error: 'Internal server error occured'\n              });\n\n            case 55:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[10, 51]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }()); // DELETE route used to delete a task from database\n\n  taskRouter[\"delete\"]('/', [// Check that task id is numeric and greater than 0\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('task_id').isNumeric({\n    min: 0,\n    max: undefined\n  }).withMessage('Invalid task id')], /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n      var session, validationErrors, _yield$MySQLPool$quer9, _yield$MySQLPool$quer10, user_rows, _yield$MySQLPool$quer11, _yield$MySQLPool$quer12, rows;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              session = req.session;\n              validationErrors = Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"validationResult\"])(req).formatWith(validationErrorFormatter); // Check if the user is logged in or not and check if the user is a manager and workspace id exists in session\n\n              if (!(session.isUserLoggedIn !== true || session.userType !== 0 || session.workspaceID === undefined)) {\n                _context2.next = 6;\n                break;\n              }\n\n              res.status(401).json({\n                error: 'Unauthorized access'\n              });\n              _context2.next = 32;\n              break;\n\n            case 6:\n              if (!(validationErrors.isEmpty() === false)) {\n                _context2.next = 10;\n                break;\n              }\n\n              res.status(422).json({\n                errors: validationErrors.array()\n              });\n              _context2.next = 32;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.next = 13;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query(\"CALL IsUserInWorkspace(?,?,?)\", [session.workspaceID, session.userID, 0]);\n\n            case 13:\n              _yield$MySQLPool$quer9 = _context2.sent;\n              _yield$MySQLPool$quer10 = _slicedToArray(_yield$MySQLPool$quer9, 1);\n              user_rows = _yield$MySQLPool$quer10[0];\n\n              if (!(user_rows[0][0].count !== 1)) {\n                _context2.next = 20;\n                break;\n              }\n\n              res.status(401).json({\n                error: 'Unauthorized access'\n              });\n              _context2.next = 26;\n              break;\n\n            case 20:\n              _context2.next = 22;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query('CALL DeleteTask(?,?)', [session.workspaceID, req.body.task_id]);\n\n            case 22:\n              _yield$MySQLPool$quer11 = _context2.sent;\n              _yield$MySQLPool$quer12 = _slicedToArray(_yield$MySQLPool$quer11, 1);\n              rows = _yield$MySQLPool$quer12[0];\n              // Check if the task was actually removed\n              if (rows.affectedRows === 0) res.status(400).json({\n                error: 'Task was not deleted'\n              });else res.json({\n                task_id: req.body.task_id\n              });\n\n            case 26:\n              _context2.next = 32;\n              break;\n\n            case 28:\n              _context2.prev = 28;\n              _context2.t0 = _context2[\"catch\"](10);\n              Loaders_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(_context2.t0);\n              res.status(500).json({\n                error: 'Internal server error occured'\n              });\n\n            case 32:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[10, 28]]);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }()); // PUT route to update an existing task\n\n  taskRouter.put('/', [// Check that task id is numeric and greater than 0\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('task_id').isNumeric({\n    min: 0,\n    max: undefined\n  }).withMessage('Invalid task id'), // Check that task name is of valid length\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('task_name').isLength({\n    min: 4,\n    max: 255\n  }).withMessage('Task name must be at least 4 letters'), // Check that the task date is a valid date\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('task_date').custom(isDate).withMessage('Date provided is not in valid format'), //Check that assigned worker has a valid worker id\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('task_worker').isNumeric({\n    min: 0,\n    max: undefined\n  }).withMessage('Assigned user is not valid'), // Check that the color is one of the allowed colors\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('task_color').isIn(['Navy', 'Red', 'Orange', 'Yellow', 'Green', 'Blue', 'Teal', 'Purple']).withMessage('Color provided is not allowed')], /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n      var session, validationErrors, _yield$MySQLPool$quer13, _yield$MySQLPool$quer14, user_rows, _yield$MySQLPool$quer15, _yield$MySQLPool$quer16, worker_rows, _yield$MySQLPool$quer17, _yield$MySQLPool$quer18, rows;\n\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              session = req.session;\n              validationErrors = Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"validationResult\"])(req).formatWith(validationErrorFormatter); // Check if the user is logged in or not and check if the user is a manager and workspace id exists in session\n\n              if (!(session.isUserLoggedIn !== true || session.userType !== 0 || session.workspaceID === undefined)) {\n                _context3.next = 6;\n                break;\n              }\n\n              res.status(401).json({\n                success: false,\n                error: 'Unauthorized access'\n              });\n              _context3.next = 41;\n              break;\n\n            case 6:\n              if (!(validationErrors.isEmpty() === false)) {\n                _context3.next = 10;\n                break;\n              }\n\n              res.status(422).json({\n                success: false,\n                errors: validationErrors.array()\n              });\n              _context3.next = 41;\n              break;\n\n            case 10:\n              _context3.prev = 10;\n              _context3.next = 13;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query(\"CALL IsUserInWorkspace(?,?,?)\", [session.workspaceID, session.userID, 0]);\n\n            case 13:\n              _yield$MySQLPool$quer13 = _context3.sent;\n              _yield$MySQLPool$quer14 = _slicedToArray(_yield$MySQLPool$quer13, 1);\n              user_rows = _yield$MySQLPool$quer14[0];\n              _context3.next = 18;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query(\"CALL IsUserInWorkspace(?,?,?)\", [session.workspaceID, req.body.task_worker, 1]);\n\n            case 18:\n              _yield$MySQLPool$quer15 = _context3.sent;\n              _yield$MySQLPool$quer16 = _slicedToArray(_yield$MySQLPool$quer15, 1);\n              worker_rows = _yield$MySQLPool$quer16[0];\n\n              if (!(user_rows[0][0].count !== 1)) {\n                _context3.next = 25;\n                break;\n              }\n\n              res.status(401).json({\n                error: 'Unauthorized access'\n              });\n              _context3.next = 35;\n              break;\n\n            case 25:\n              if (!(worker_rows[0][0].count !== 1)) {\n                _context3.next = 29;\n                break;\n              }\n\n              res.status(422).json({\n                error: 'Assigned worker invalid'\n              });\n              _context3.next = 35;\n              break;\n\n            case 29:\n              _context3.next = 31;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query('CALL UpdateTask(?,?,?,?,?,?)', [session.workspaceID, req.body.task_id, req.body.task_worker, req.body.task_name, req.body.task_color, req.body.task_date]);\n\n            case 31:\n              _yield$MySQLPool$quer17 = _context3.sent;\n              _yield$MySQLPool$quer18 = _slicedToArray(_yield$MySQLPool$quer17, 1);\n              rows = _yield$MySQLPool$quer18[0];\n              // Check if the task was actually updated\n              if (rows.affectedRows === 0) res.status(400).json({\n                error: 'Task information was not updated'\n              });else res.sendStatus(200);\n\n            case 35:\n              _context3.next = 41;\n              break;\n\n            case 37:\n              _context3.prev = 37;\n              _context3.t0 = _context3[\"catch\"](10);\n              Loaders_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(_context3.t0);\n              res.status(500).json({\n                error: 'Internal server error occured'\n              });\n\n            case 41:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[10, 37]]);\n    }));\n\n    return function (_x5, _x6) {\n      return _ref4.apply(this, arguments);\n    };\n  }()); // PUT route to mark task as completed\n\n  taskRouter.put('/status', [// Check that task id is numeric and greater than 0\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('task_id').isNumeric({\n    min: 0,\n    max: undefined\n  }).withMessage('Invalid task id'), // Check that the status is a boolean\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('task_status').isBoolean().withMessage('Task status needs to be a boolean')], /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n      var session, validationErrors, _yield$MySQLPool$quer19, _yield$MySQLPool$quer20, user_rows, _yield$MySQLPool$quer21, _yield$MySQLPool$quer22, rows;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              session = req.session;\n              validationErrors = Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"validationResult\"])(req).formatWith(validationErrorFormatter); // Check if the user is logged in or not and workspace id exists in session\n\n              if (!(session.isUserLoggedIn !== true || session.workspaceID === undefined)) {\n                _context4.next = 6;\n                break;\n              }\n\n              res.status(401).json({\n                success: false,\n                error: 'Unauthorized access'\n              });\n              _context4.next = 32;\n              break;\n\n            case 6:\n              if (!(validationErrors.isEmpty() === false)) {\n                _context4.next = 10;\n                break;\n              }\n\n              res.status(422).json({\n                errors: validationErrors.array()\n              });\n              _context4.next = 32;\n              break;\n\n            case 10:\n              _context4.prev = 10;\n              _context4.next = 13;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query(\"CALL IsUserInWorkspace(?,?,?)\", [session.workspaceID, session.userID, session.userType]);\n\n            case 13:\n              _yield$MySQLPool$quer19 = _context4.sent;\n              _yield$MySQLPool$quer20 = _slicedToArray(_yield$MySQLPool$quer19, 1);\n              user_rows = _yield$MySQLPool$quer20[0];\n\n              if (!(user_rows[0][0].count !== 1)) {\n                _context4.next = 20;\n                break;\n              }\n\n              res.status(401).json({\n                error: 'Unauthorized access'\n              });\n              _context4.next = 26;\n              break;\n\n            case 20:\n              _context4.next = 22;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query('CALL SetTaskStatus(?,?,?)', [session.workspaceID, req.body.task_id, req.body.task_status]);\n\n            case 22:\n              _yield$MySQLPool$quer21 = _context4.sent;\n              _yield$MySQLPool$quer22 = _slicedToArray(_yield$MySQLPool$quer21, 1);\n              rows = _yield$MySQLPool$quer22[0];\n              // Check if the task was actually updated\n              if (rows.affectedRows === 0) res.status(400).json({\n                error: 'Task status was not updated'\n              });else res.json({\n                task_id: req.body.task_id\n              });\n\n            case 26:\n              _context4.next = 32;\n              break;\n\n            case 28:\n              _context4.prev = 28;\n              _context4.t0 = _context4[\"catch\"](10);\n              Loaders_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(_context4.t0);\n              res.status(500).json({\n                error: 'Internal server error occured'\n              });\n\n            case 32:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[10, 28]]);\n    }));\n\n    return function (_x7, _x8) {\n      return _ref5.apply(this, arguments);\n    };\n  }()); // GET route used to get all tasks from today\n\n  taskRouter.get('/today', [// Check that date valid\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"query\"])('date').custom(isDate).withMessage('Date provided is not in valid format')], /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n      var session, validationErrors, onlyCurrentUserTasks, _yield$MySQLPool$quer23, _yield$MySQLPool$quer24, user_rows, _yield$MySQLPool$quer25, _yield$MySQLPool$quer26, rows;\n\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              session = req.session;\n              validationErrors = Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"validationResult\"])(req).formatWith(validationErrorFormatter); // Check if the user is logged in or not\n\n              if (!(session.isUserLoggedIn !== true || session.workspaceID === undefined)) {\n                _context5.next = 6;\n                break;\n              }\n\n              res.status(401).json({\n                success: false,\n                error: 'Unauthorized access'\n              });\n              _context5.next = 33;\n              break;\n\n            case 6:\n              if (!(validationErrors.isEmpty() === false)) {\n                _context5.next = 10;\n                break;\n              }\n\n              res.status(422).json({\n                errors: validationErrors.array()\n              });\n              _context5.next = 33;\n              break;\n\n            case 10:\n              onlyCurrentUserTasks = req.query.mine === true ? true : false;\n              _context5.prev = 11;\n              _context5.next = 14;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query(\"CALL IsUserInWorkspace(?,?,?)\", [session.workspaceID, session.userID, session.userType]);\n\n            case 14:\n              _yield$MySQLPool$quer23 = _context5.sent;\n              _yield$MySQLPool$quer24 = _slicedToArray(_yield$MySQLPool$quer23, 1);\n              user_rows = _yield$MySQLPool$quer24[0];\n\n              if (!(user_rows[0].length !== 1)) {\n                _context5.next = 21;\n                break;\n              }\n\n              res.status(401).json({\n                error: 'Unauthorized access'\n              });\n              _context5.next = 27;\n              break;\n\n            case 21:\n              _context5.next = 23;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query(\"CALL GetAllTodayTasks(?,?,?,?)\", [session.workspaceID, req.query.date, onlyCurrentUserTasks, session.userID]);\n\n            case 23:\n              _yield$MySQLPool$quer25 = _context5.sent;\n              _yield$MySQLPool$quer26 = _slicedToArray(_yield$MySQLPool$quer25, 1);\n              rows = _yield$MySQLPool$quer26[0];\n              res.json({\n                tasks: rows[0]\n              });\n\n            case 27:\n              _context5.next = 33;\n              break;\n\n            case 29:\n              _context5.prev = 29;\n              _context5.t0 = _context5[\"catch\"](11);\n              Loaders_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(_context5.t0);\n              res.status(500).json({\n                error: 'Internal server error occured'\n              });\n\n            case 33:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[11, 29]]);\n    }));\n\n    return function (_x9, _x10) {\n      return _ref6.apply(this, arguments);\n    };\n  }()); // GET route used to get all tasks from comming week\n\n  taskRouter.get('/week', [// Check that start date valid\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"query\"])('start_date').custom(isDate).withMessage('Start date provided is not in valid format'), // Check that end date valid\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"query\"])('end_date').custom(isDate).withMessage('End date provided is not in valid format')], /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n      var session, validationErrors, onlyCurrentUserTasks, _yield$MySQLPool$quer27, _yield$MySQLPool$quer28, user_rows, _yield$MySQLPool$quer29, _yield$MySQLPool$quer30, rows;\n\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              session = req.session;\n              validationErrors = Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"validationResult\"])(req).formatWith(validationErrorFormatter); // Check if the user is logged in or not\n\n              if (!(session.isUserLoggedIn !== true || session.workspaceID === undefined)) {\n                _context6.next = 6;\n                break;\n              }\n\n              res.status(401).json({\n                success: false,\n                error: 'Unauthorized access'\n              });\n              _context6.next = 33;\n              break;\n\n            case 6:\n              if (!(validationErrors.isEmpty() === false)) {\n                _context6.next = 10;\n                break;\n              }\n\n              res.status(422).json({\n                errors: validationErrors.array()\n              });\n              _context6.next = 33;\n              break;\n\n            case 10:\n              onlyCurrentUserTasks = req.query.mine === true ? true : false;\n              _context6.prev = 11;\n              _context6.next = 14;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query(\"CALL IsUserInWorkspace(?,?,?)\", [session.workspaceID, session.userID, session.userType]);\n\n            case 14:\n              _yield$MySQLPool$quer27 = _context6.sent;\n              _yield$MySQLPool$quer28 = _slicedToArray(_yield$MySQLPool$quer27, 1);\n              user_rows = _yield$MySQLPool$quer28[0];\n\n              if (!(user_rows[0].length !== 1)) {\n                _context6.next = 21;\n                break;\n              }\n\n              res.status(401).json({\n                error: 'Unauthorized access'\n              });\n              _context6.next = 27;\n              break;\n\n            case 21:\n              _context6.next = 23;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query(\"CALL GetAllWeekTasks(?,?,?,?,?)\", [session.workspaceID, req.query.start_date, req.query.end_date, onlyCurrentUserTasks, session.userID]);\n\n            case 23:\n              _yield$MySQLPool$quer29 = _context6.sent;\n              _yield$MySQLPool$quer30 = _slicedToArray(_yield$MySQLPool$quer29, 1);\n              rows = _yield$MySQLPool$quer30[0];\n              res.json({\n                tasks: rows[0]\n              });\n\n            case 27:\n              _context6.next = 33;\n              break;\n\n            case 29:\n              _context6.prev = 29;\n              _context6.t0 = _context6[\"catch\"](11);\n              Loaders_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(_context6.t0);\n              res.status(500).json({\n                error: 'Internal server error occured'\n              });\n\n            case 33:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[11, 29]]);\n    }));\n\n    return function (_x11, _x12) {\n      return _ref7.apply(this, arguments);\n    };\n  }()); // GET route used to get all tasks in a workspace\n\n  taskRouter.get('/all', /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n      var session, onlyCurrentUserTasks, _yield$MySQLPool$quer31, _yield$MySQLPool$quer32, user_rows, _yield$MySQLPool$quer33, _yield$MySQLPool$quer34, rows;\n\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              session = req.session; // Check if the user is logged in or not\n\n              if (!(session.isUserLoggedIn !== true || session.workspaceID === undefined)) {\n                _context7.next = 5;\n                break;\n              }\n\n              res.status(401).json({\n                success: false,\n                error: 'Unauthorized access'\n              });\n              _context7.next = 28;\n              break;\n\n            case 5:\n              onlyCurrentUserTasks = req.query.mine === true ? true : false;\n              _context7.prev = 6;\n              _context7.next = 9;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query(\"CALL IsUserInWorkspace(?,?,?)\", [session.workspaceID, session.userID, session.userType]);\n\n            case 9:\n              _yield$MySQLPool$quer31 = _context7.sent;\n              _yield$MySQLPool$quer32 = _slicedToArray(_yield$MySQLPool$quer31, 1);\n              user_rows = _yield$MySQLPool$quer32[0];\n\n              if (!(user_rows[0].length !== 1)) {\n                _context7.next = 16;\n                break;\n              }\n\n              res.status(401).json({\n                error: 'Unauthorized access'\n              });\n              _context7.next = 22;\n              break;\n\n            case 16:\n              _context7.next = 18;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query(\"CALL GetAllTasks(?,?,?)\", [session.workspaceID, onlyCurrentUserTasks, session.userID]);\n\n            case 18:\n              _yield$MySQLPool$quer33 = _context7.sent;\n              _yield$MySQLPool$quer34 = _slicedToArray(_yield$MySQLPool$quer33, 1);\n              rows = _yield$MySQLPool$quer34[0];\n              res.json({\n                tasks: rows[0]\n              });\n\n            case 22:\n              _context7.next = 28;\n              break;\n\n            case 24:\n              _context7.prev = 24;\n              _context7.t0 = _context7[\"catch\"](6);\n              Loaders_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(_context7.t0);\n              res.status(500).json({\n                error: 'Internal server error occured'\n              });\n\n            case 28:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[6, 24]]);\n    }));\n\n    return function (_x13, _x14) {\n      return _ref8.apply(this, arguments);\n    };\n  }()); // POST route used to search for a task group\n\n  taskRouter.post('/group/search', [// Check that group name is of valid length\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('task_group_name').isLength({\n    min: 4,\n    max: 255\n  })], /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res) {\n      var session, validationErrors, _yield$MySQLPool$quer35, _yield$MySQLPool$quer36, rows;\n\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              session = req.session;\n              validationErrors = Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"validationResult\"])(req).formatWith(validationErrorFormatter); // Check if the user is logged in or not\n\n              if (!(session.isUserLoggedIn !== true)) {\n                _context8.next = 6;\n                break;\n              }\n\n              res.status(401).json({\n                success: false,\n                error: 'Unauthorized access'\n              });\n              _context8.next = 23;\n              break;\n\n            case 6:\n              if (!(validationErrors.isEmpty() === false)) {\n                _context8.next = 10;\n                break;\n              }\n\n              res.status(422).json({\n                success: false,\n                error: 'Group name needs to be greater than 4 letters'\n              });\n              _context8.next = 23;\n              break;\n\n            case 10:\n              _context8.prev = 10;\n              _context8.next = 13;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query('CALL SearchForTaskGroup(?, ?)', [session.workspaceID, \"%\".concat(req.body.task_group_name, \"%\")]);\n\n            case 13:\n              _yield$MySQLPool$quer35 = _context8.sent;\n              _yield$MySQLPool$quer36 = _slicedToArray(_yield$MySQLPool$quer35, 1);\n              rows = _yield$MySQLPool$quer36[0];\n              res.json({\n                groups: rows[0]\n              });\n              _context8.next = 23;\n              break;\n\n            case 19:\n              _context8.prev = 19;\n              _context8.t0 = _context8[\"catch\"](10);\n              Loaders_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(_context8.t0);\n              res.status(500).json({\n                error: 'Internal server error occured'\n              });\n\n            case 23:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[10, 19]]);\n    }));\n\n    return function (_x15, _x16) {\n      return _ref9.apply(this, arguments);\n    };\n  }()); // POST route used to create a new task groups\n\n  taskRouter.post('/group', [// Check that workspace name is of valid length\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('task_group_name').isLength({\n    min: 4,\n    max: 255\n  })], /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res) {\n      var session, validationErrors, _yield$MySQLPool$quer37, _yield$MySQLPool$quer38, rows;\n\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              session = req.session;\n              validationErrors = Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"validationResult\"])(req).formatWith(validationErrorFormatter); // Check if the user is logged in or not and check if the user is a manager\n\n              if (!(session.isUserLoggedIn !== true || session.userType !== 0)) {\n                _context9.next = 6;\n                break;\n              }\n\n              res.status(401).json({\n                success: false,\n                error: 'Unauthorized access'\n              });\n              _context9.next = 23;\n              break;\n\n            case 6:\n              if (!(validationErrors.isEmpty() === false)) {\n                _context9.next = 10;\n                break;\n              }\n\n              res.status(422).json({\n                success: false,\n                error: 'Group name needs to be greater than 4 letters'\n              });\n              _context9.next = 23;\n              break;\n\n            case 10:\n              _context9.prev = 10;\n              _context9.next = 13;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query('CALL CreateNewTaskGroup(?,?)', [session.workspaceID, req.body.task_group_name]);\n\n            case 13:\n              _yield$MySQLPool$quer37 = _context9.sent;\n              _yield$MySQLPool$quer38 = _slicedToArray(_yield$MySQLPool$quer37, 1);\n              rows = _yield$MySQLPool$quer38[0];\n              res.json({\n                task_group_id: rows[0][0].task_group_id\n              });\n              _context9.next = 23;\n              break;\n\n            case 19:\n              _context9.prev = 19;\n              _context9.t0 = _context9[\"catch\"](10);\n              Loaders_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(_context9.t0);\n              res.status(500).json({\n                error: 'Internal server error occured'\n              });\n\n            case 23:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[10, 19]]);\n    }));\n\n    return function (_x17, _x18) {\n      return _ref10.apply(this, arguments);\n    };\n  }());\n});\n\n//# sourceURL=webpack:///./server/api/routes/task.js?");

/***/ }),

/***/ "./server/api/routes/user.js":
/*!***********************************!*\
  !*** ./server/api/routes/user.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ \"express\");\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var express_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! express-validator */ \"express-validator\");\n/* harmony import */ var express_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(express_validator__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! Loaders/mysql */ \"./server/loaders/mysql.js\");\n/* harmony import */ var Loaders_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! Loaders/logger */ \"./server/loaders/logger.js\");\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n // Used to validate any params recieved from client\n\n // A poll of connections to MySQL database used to make queries\n\n // Import Winston logger instance to log messages to console\n\n\nvar userRouter = express__WEBPACK_IMPORTED_MODULE_0___default.a.Router(); // Function used to format validation errors (if any)\n\nvar validationErrorFormatter = function validationErrorFormatter(_ref) {\n  var msg = _ref.msg;\n  return msg;\n}; // Custome validator to availabilty length\n\n\nvar isLength = function isLength(value) {\n  if (value === undefined || value === null) return false;\n  if (value.length !== 7) return false;else return true;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (baseRouter) {\n  baseRouter.use('/', userRouter); // POST route used when a new user wants to create an account\n\n  userRouter.post('/join', [// Check that first name is not empty\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('first_name').not().isEmpty().withMessage('First name can not be empty'), // Check that the first name only contains alphabets\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('first_name').isAlpha().withMessage('First name can only contain letters (a-zA-Z)'), // Check that last name is not empty\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('last_name').not().isEmpty().withMessage('Last name can not be empty'), // Check that last name only contains alphabets\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('last_name').isAlpha().withMessage('Last name can only contain letters (a-zA-Z)'), // Check that username is of valid length\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('username').isLength({\n    min: 5,\n    max: 30\n  }).withMessage('Username size needs to be between 5 and 30'), // Check that password is a valid hash\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('pass').isMD5().withMessage('Chosen password is weak'), // Check that email is valid\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('email').isEmail().withMessage('Provide a valid email address'), // Check that account type is a valid enum\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('account_type').isInt({\n    min: 0,\n    max: 1\n  }).withMessage('Account type is not a valid type')], /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n      var session, validationErrors, userID, _yield$MySQLPool$quer, _yield$MySQLPool$quer2, rows, _yield$MySQLPool$quer3, _yield$MySQLPool$quer4, _rows;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              session = req.session;\n\n              if (!(session.isUserLoggedIn === true)) {\n                _context.next = 6;\n                break;\n              }\n\n              // A way to redirect when using XHTTP\n              res.setHeader('xhttp-redirect', '/scheduler');\n              res.sendStatus(200);\n              _context.next = 35;\n              break;\n\n            case 6:\n              validationErrors = Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"validationResult\"])(req).formatWith(validationErrorFormatter);\n\n              if (!(validationErrors.isEmpty() === false)) {\n                _context.next = 11;\n                break;\n              }\n\n              res.status(422).json({\n                errors: validationErrors.array()\n              });\n              _context.next = 35;\n              break;\n\n            case 11:\n              userID = undefined;\n              _context.prev = 12;\n\n              if (!(req.body.account_type === 0)) {\n                _context.next = 22;\n                break;\n              }\n\n              _context.next = 16;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query('CALL NewManager(?,?,?,?,?)', [req.body.first_name, req.body.last_name, req.body.email, req.body.username, req.body.pass]);\n\n            case 16:\n              _yield$MySQLPool$quer = _context.sent;\n              _yield$MySQLPool$quer2 = _slicedToArray(_yield$MySQLPool$quer, 1);\n              rows = _yield$MySQLPool$quer2[0];\n              userID = rows[0][0].manager_id;\n              _context.next = 29;\n              break;\n\n            case 22:\n              if (!(req.body.account_type === 1)) {\n                _context.next = 29;\n                break;\n              }\n\n              _context.next = 25;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query('CALL NewWorker(?,?,?,?,?)', [req.body.first_name, req.body.last_name, req.body.email, req.body.username, req.body.pass]);\n\n            case 25:\n              _yield$MySQLPool$quer3 = _context.sent;\n              _yield$MySQLPool$quer4 = _slicedToArray(_yield$MySQLPool$quer3, 1);\n              _rows = _yield$MySQLPool$quer4[0];\n              userID = _rows[0][0].worker_id;\n\n            case 29:\n              // Something has gone wrong and there is no user id\n              if (userID == undefined) {\n                Loaders_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error('No user id returned when creating a new user');\n                res.status(500).json({\n                  error: 'Internal server error occured'\n                });\n              } else {\n                // Store user information in session\n                session.isUserLoggedIn = true;\n                session.userID = userID;\n                session.userType = req.body.account_type; // A way to redirect when using XHTTP\n\n                res.setHeader('xhttp-redirect', '/scheduler');\n                res.sendStatus(200);\n              }\n\n              _context.next = 35;\n              break;\n\n            case 32:\n              _context.prev = 32;\n              _context.t0 = _context[\"catch\"](12);\n\n              // Check what type of error occured\n              if (_context.t0.code === 'ER_DUP_ENTRY') {\n                // Only a dublicate username can cause this MySQL error\n                Loaders_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].warn(_context.t0);\n                res.status(422).json({\n                  errors: ['Username already exists']\n                });\n              } else {\n                // Any other error is bad news\n                Loaders_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(_context.t0);\n                res.status(500).json({\n                  error: 'Internal server error occured'\n                });\n              }\n\n            case 35:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[12, 32]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }()); // POST route used when a user wants to login\n\n  userRouter.post('/login', [// Check that username is of valid length\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('username').isLength({\n    min: 5,\n    max: 30\n  }), // Check that password is a valid hash\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('pass').isMD5(), // Check that account type is a valid enum\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('account_type').isInt({\n    min: 0,\n    max: 1\n  })], /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n      var session, validationErrors, userID, workspaceID, _yield$MySQLPool$quer5, _yield$MySQLPool$quer6, rows, _yield$MySQLPool$quer7, _yield$MySQLPool$quer8, workspace_rows;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              session = req.session;\n\n              if (!(session.isUserLoggedIn === true)) {\n                _context2.next = 6;\n                break;\n              }\n\n              // A way to redirect when using XHTTP\n              res.setHeader('xhttp-redirect', '/scheduler');\n              res.sendStatus(200);\n              _context2.next = 34;\n              break;\n\n            case 6:\n              validationErrors = Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"validationResult\"])(req).formatWith(validationErrorFormatter);\n\n              if (!(validationErrors.isEmpty() === false)) {\n                _context2.next = 11;\n                break;\n              }\n\n              res.status(401).json({\n                error: 'Invalid account information'\n              });\n              _context2.next = 34;\n              break;\n\n            case 11:\n              userID = undefined;\n              workspaceID = undefined;\n              _context2.prev = 13;\n              _context2.next = 16;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query('CALL CheckUserExists(?,?,?)', [req.body.username, req.body.pass, req.body.account_type]);\n\n            case 16:\n              _yield$MySQLPool$quer5 = _context2.sent;\n              _yield$MySQLPool$quer6 = _slicedToArray(_yield$MySQLPool$quer5, 1);\n              rows = _yield$MySQLPool$quer6[0];\n\n              if (!(rows[0].length === 1)) {\n                _context2.next = 27;\n                break;\n              }\n\n              if (req.body.account_type === 0) userID = rows[0][0].manager_id;else if (req.body.account_type === 1) userID = rows[0][0].worker_id; // Get workspaces manager belongs to\n\n              _context2.next = 23;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query('CALL GetUserWorkspaces(?,?)', [userID, req.body.account_type]);\n\n            case 23:\n              _yield$MySQLPool$quer7 = _context2.sent;\n              _yield$MySQLPool$quer8 = _slicedToArray(_yield$MySQLPool$quer7, 1);\n              workspace_rows = _yield$MySQLPool$quer8[0];\n\n              // Check if there are any workspaces at all\n              if (workspace_rows[0].length > 0) {\n                workspaceID = workspace_rows[0][0].workspace_id;\n              }\n\n            case 27:\n              // No account with matching details found\n              if (userID == undefined) {\n                res.status(401).json({\n                  error: 'Account does not exist'\n                });\n              } else {\n                // Store user information in session\n                session.isUserLoggedIn = true;\n                session.userID = userID;\n                session.userType = req.body.account_type;\n                session.workspaceID = workspaceID; // A way to redirect when using XHTTP\n\n                res.setHeader('xhttp-redirect', '/scheduler');\n                res.sendStatus(200);\n              }\n\n              _context2.next = 34;\n              break;\n\n            case 30:\n              _context2.prev = 30;\n              _context2.t0 = _context2[\"catch\"](13);\n              Loaders_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(_context2.t0);\n              res.status(500).json({\n                error: 'Internal server error occured'\n              });\n\n            case 34:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[13, 30]]);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }()); // POST route used when a user wants to logout\n\n  userRouter.post('/logout', /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n      var session;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              session = req.session;\n              session.destroy(function (error) {\n                // Check if any error occured\n                if (error !== undefined) {\n                  Loaders_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(error);\n                  res.status(500).json({\n                    success: false,\n                    error: 'Internal server error occured'\n                  });\n                } else {\n                  // Redirect to home\n                  res.setHeader('xhttp-redirect', '/');\n                  res.sendStatus(200);\n                }\n              });\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x5, _x6) {\n      return _ref4.apply(this, arguments);\n    };\n  }()); // GET route used to retrieve current user id\n\n  userRouter.get('/user/id', /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n      var session;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              session = req.session;\n\n              if (session.isUserLoggedIn === true) {\n                res.json({\n                  user_id: session.userID\n                });\n              } else {\n                res.sendStatus(401);\n              }\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x7, _x8) {\n      return _ref5.apply(this, arguments);\n    };\n  }()); // GET route used to retrieve user profile\n\n  userRouter.get('/profile', /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n      var session, _yield$MySQLPool$quer9, _yield$MySQLPool$quer10, rows;\n\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              session = req.session;\n\n              if (!(session.isUserLoggedIn === true)) {\n                _context5.next = 17;\n                break;\n              }\n\n              _context5.prev = 2;\n              _context5.next = 5;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query('CALL GetProfileInformation(?,?)', [session.userType, session.userID]);\n\n            case 5:\n              _yield$MySQLPool$quer9 = _context5.sent;\n              _yield$MySQLPool$quer10 = _slicedToArray(_yield$MySQLPool$quer9, 1);\n              rows = _yield$MySQLPool$quer10[0];\n              res.json({\n                profile: rows[0][0]\n              });\n              _context5.next = 15;\n              break;\n\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](2);\n              Loaders_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(_context5.t0);\n              res.status(500).json({\n                error: 'Internal server error occured'\n              });\n\n            case 15:\n              _context5.next = 18;\n              break;\n\n            case 17:\n              res.sendStatus(401);\n\n            case 18:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[2, 11]]);\n    }));\n\n    return function (_x9, _x10) {\n      return _ref6.apply(this, arguments);\n    };\n  }()); // GET route used to retrieve user profile\n\n  userRouter.put('/profile', [// Check that first name is not empty\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('first_name').not().isEmpty().withMessage('First name can not be empty'), // Check that the first name only contains alphabets\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('first_name').isAlpha().withMessage('First name can only contain letters (a-zA-Z)'), // Check that last name is not empty\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('last_name').not().isEmpty().withMessage('Last name can not be empty'), // Check that last name only contains alphabets\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('last_name').isAlpha().withMessage('Last name can only contain letters (a-zA-Z)'), // Check that username is of valid length\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('username').isLength({\n    min: 5,\n    max: 30\n  }).withMessage('Username size needs to be between 5 and 30'), // Check that password is a valid hash\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('pass').isMD5().withMessage('Chosen password is weak'), // Check that email is valid\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('email').isEmail().withMessage('Provide a valid email address'), // Check that availability is not empty\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('availability').custom(isLength, 7).withMessage('Availability is not in a valid format')], /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n      var session, validationErrors, _yield$MySQLPool$quer11, _yield$MySQLPool$quer12, rows;\n\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              session = req.session;\n\n              if (!(session.isUserLoggedIn === true)) {\n                _context6.next = 22;\n                break;\n              }\n\n              validationErrors = Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"validationResult\"])(req).formatWith(validationErrorFormatter);\n\n              if (!(validationErrors.isEmpty() === false)) {\n                _context6.next = 7;\n                break;\n              }\n\n              res.status(422).json({\n                errors: validationErrors.array()\n              });\n              _context6.next = 20;\n              break;\n\n            case 7:\n              _context6.prev = 7;\n              _context6.next = 10;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query('CALL UpdateUserProfile(?,?,?,?,?,?,?,?)', [session.userID, session.userType, req.body.first_name, req.body.last_name, req.body.email, req.body.username, req.body.pass, req.body.availability]);\n\n            case 10:\n              _yield$MySQLPool$quer11 = _context6.sent;\n              _yield$MySQLPool$quer12 = _slicedToArray(_yield$MySQLPool$quer11, 1);\n              rows = _yield$MySQLPool$quer12[0];\n              res.sendStatus(200);\n              _context6.next = 20;\n              break;\n\n            case 16:\n              _context6.prev = 16;\n              _context6.t0 = _context6[\"catch\"](7);\n              Loaders_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(_context6.t0);\n              res.status(500).json({\n                error: 'Internal server error occured'\n              });\n\n            case 20:\n              _context6.next = 23;\n              break;\n\n            case 22:\n              res.sendStatus(401);\n\n            case 23:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[7, 16]]);\n    }));\n\n    return function (_x11, _x12) {\n      return _ref7.apply(this, arguments);\n    };\n  }());\n});\n\n//# sourceURL=webpack:///./server/api/routes/user.js?");

/***/ }),

/***/ "./server/api/routes/worker.js":
/*!*************************************!*\
  !*** ./server/api/routes/worker.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var Loaders_mysql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! Loaders/mysql */ \"./server/loaders/mysql.js\");\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar express = __webpack_require__(/*! express */ \"express\");\n\n // Router used to route /api/v1/worker endpoints\n\nvar workerRouter = express.Router();\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (apiRouter) {\n  apiRouter.use('/worker', workerRouter); // Create a new worker account\n\n  workerRouter.post('/join', function (req, res) {\n    res.json({\n      account_type: 'worker'\n    });\n  }); // Login a worker account\n\n  workerRouter.post('/login', function (req, res) {\n    res.json({\n      account_type: 'worker'\n    });\n  }); // GET route used to retrive all the workspace a worker belongs to\n\n  workerRouter.get('/workspaces', /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n      var session;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // var workspaces = [\n              //   { id: 1, name: '🎀 WOTBOS New York' },\n              //   { id: 2, name: '📜 Quest Workspaces' },\n              //   { id: 3, name: '🎶 The Farm SoHo NYC' },\n              // ];\n              // res.json(workspaces);\n              session = req.session;\n\n              if (session.test === undefined) {\n                session.test = 'Testing!';\n              } else {\n                console.log(session.test);\n              } // const [errors, rows, fields] = await MySqlPool.query('CALL NewManager(?,?,?,?,?)', [\n              //   'Parthey',\n              //   'Baby',\n              //   'test@gmail.com',\n              //   'parthey_b',\n              //   'pass',\n              // ]);\n              // console.log('ERRORS!!!!');\n              // console.log(errors);\n              // console.log('ROWS!!!');\n              // console.log(rows);\n              // console.log('FIELDS!!!!');\n              // console.log(fields);\n\n\n              res.json({});\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }()); // GET route used to retrive today's tasks\n\n  workerRouter.get('/tasks', function (req, res) {\n    if (req.query.timeline == 'today' || req.query.timeline == undefined) {\n      var tasks = [{\n        date: Math.round(new Date().getTime() / 1000),\n        tasks: [{\n          title: 'This is a test task',\n          user: 1,\n          completed: false\n        }, {\n          title: 'I have to do this taks today',\n          user: 1,\n          completed: false,\n          color: 'red'\n        }, {\n          title: 'This task is not assigned to me',\n          user: 3,\n          completed: false,\n          color: 'orange'\n        }, {\n          title: 'This one too',\n          user: 2,\n          completed: false,\n          color: 'purple'\n        }, {\n          title: 'Back to me again I should really clean the dishes',\n          user: 1,\n          completed: false,\n          color: 'green'\n        }, {\n          title: ':)',\n          user: 4,\n          completed: false\n        }]\n      }];\n      res.json(tasks);\n    } else if (req.query.timeline == 'week') {\n      var today = new Date();\n      var _tasks = [{\n        date: Math.round(today.getTime() / 1000),\n        tasks: [{\n          title: 'This is a test task',\n          user: 1,\n          completed: false\n        }, {\n          title: 'I have to do this taks today',\n          user: 1,\n          completed: false,\n          color: 'red'\n        }, {\n          title: 'This task is not assigned to me',\n          user: 3,\n          completed: false,\n          color: 'orange'\n        }, {\n          title: 'This one too',\n          user: 2,\n          completed: false,\n          color: 'purple'\n        }, {\n          title: 'Back to me again I should really clean the dishes',\n          user: 1,\n          completed: false,\n          color: 'green'\n        }, {\n          title: ':)',\n          user: 4,\n          completed: false\n        }]\n      }, {\n        date: Math.round(new Date(today.getFullYear(), today.getMonth(), today.getDate() + 2).getTime() / 1000),\n        tasks: [{\n          title: 'This is a task in 2 days',\n          user: 1,\n          completed: false,\n          color: 'red'\n        }, {\n          title: 'Looks like it is working',\n          user: 1,\n          completed: false\n        }, {\n          title: 'This is just dummy data',\n          user: 3,\n          completed: false,\n          color: 'orange'\n        }, {\n          title: 'This one too',\n          user: 2,\n          completed: false,\n          color: 'purple'\n        }, {\n          title: 'So do not worry about it',\n          user: 1,\n          completed: false\n        }, {\n          title: ':)',\n          user: 4,\n          completed: false\n        }]\n      }, {\n        date: Math.round(new Date(today.getFullYear(), today.getMonth(), today.getDate() + 3).getTime() / 1000),\n        tasks: [{\n          title: 'This is a task in 2 days',\n          user: 1,\n          completed: false,\n          color: 'red'\n        }, {\n          title: 'Looks like it is working',\n          user: 1,\n          completed: false\n        }, {\n          title: 'This is just dummy data',\n          user: 3,\n          completed: false,\n          color: 'orange'\n        }, {\n          title: 'This one too',\n          user: 2,\n          completed: false,\n          color: 'purple'\n        }, {\n          title: 'So do not worry about it',\n          user: 1,\n          completed: false\n        }, {\n          title: ':)',\n          user: 4,\n          completed: false\n        }]\n      }, {\n        date: Math.round(new Date(today.getFullYear(), today.getMonth(), today.getDate() + 5).getTime() / 1000),\n        tasks: [{\n          title: 'This is a task in 2 days',\n          user: 1,\n          completed: false,\n          color: 'red'\n        }, {\n          title: 'Looks like it is working',\n          user: 1,\n          completed: false\n        }, {\n          title: 'This is just dummy data',\n          user: 3,\n          completed: false,\n          color: 'orange'\n        }, {\n          title: 'This one too',\n          user: 2,\n          completed: false,\n          color: 'purple'\n        }, {\n          title: 'So do not worry about it',\n          user: 1,\n          completed: false\n        }, {\n          title: ':)',\n          user: 4,\n          completed: false\n        }]\n      }];\n      res.json(_tasks);\n    }\n  });\n}); // [\n//   {\n//     date: 1591109736,\n//     tasks: [\n//       { title: 'Hi I am a Task', user: 1, completed: false },\n//       { title: 'Hi Gary', user: 1, completed: false, color: 'red' },\n//       { title: 'Look at me', user: 3, completed: false },\n//       { title: 'I am Mr. Meeseeks', user: 2, completed: false },\n//       { title: 'SAY MY NAME!', user: 1, completed: false },\n//       { title: ':)', user: 4, completed: false },\n//     ],\n//   },\n//   {\n//     date: 1591196136,\n//     tasks: [\n//       { title: 'Hi I am a Task', user: 1, completed: false },\n//       { title: 'Hi Gary', user: 1, completed: false },\n//       { title: 'Look at me', user: 3, completed: false, color: 'teal' },\n//       { title: 'I am Mr. Meeseeks', user: 2, completed: false },\n//       { title: 'SAY MY NAME!', user: 1, completed: false },\n//       { title: ':)', user: 4, completed: false },\n//     ],\n//   },\n//   {\n//     date: 1591368936,\n//     tasks: [\n//       { title: 'Hi I am a Task', user: 1, completed: false },\n//       { title: 'Hi Gary', user: 1, completed: false },\n//       { title: 'Look at me', user: 3, completed: false },\n//       { title: 'I am Mr. Meeseeks', user: 2, completed: false },\n//       { title: 'SAY MY NAME!', user: 1, completed: false },\n//       { title: ':)', user: 4, completed: false },\n//     ],\n//   },\n// ],\n\n//# sourceURL=webpack:///./server/api/routes/worker.js?");

/***/ }),

/***/ "./server/api/routes/workspace.js":
/*!****************************************!*\
  !*** ./server/api/routes/workspace.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ \"express\");\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var express_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! express-validator */ \"express-validator\");\n/* harmony import */ var express_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(express_validator__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! Loaders/mysql */ \"./server/loaders/mysql.js\");\n/* harmony import */ var Loaders_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! Loaders/logger */ \"./server/loaders/logger.js\");\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n // Used to validate any params recieved from client\n\n // A poll of connections to MySQL database used to make queries\n\n // Import Winston logger instance to log messages to console\n\n\nvar workspaceRouter = express__WEBPACK_IMPORTED_MODULE_0___default.a.Router(); // Function used to format validation errors (if any)\n\nvar validationErrorFormatter = function validationErrorFormatter(_ref) {\n  var msg = _ref.msg;\n  return msg;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (baseRouter) {\n  baseRouter.use('/workspace', workspaceRouter); // PUT route to update current session workspace ID\n\n  workspaceRouter.put('/change', [// Check that workspace id is numeric and greater than 0\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('workspace_id').isNumeric({\n    min: 0,\n    max: undefined\n  })], /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n      var session, validationErrors;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              session = req.session;\n              validationErrors = Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"validationResult\"])(req).formatWith(validationErrorFormatter); // Check if the user is logged in or not\n\n              if (session.isUserLoggedIn !== true) {\n                res.status(401).json({\n                  success: false,\n                  error: 'Unauthorized access'\n                });\n              } else if (validationErrors.isEmpty() === false) {\n                res.status(422).json({\n                  success: false,\n                  error: 'Workspace ID is invalid'\n                });\n              } else {\n                // Update session workspace ID and respond with a positive confirmation\n                session.workspaceID = req.body.workspace_id; // A way to redirect when using XHTTP\n\n                res.setHeader('xhttp-redirect', '/scheduler');\n                res.sendStatus(200);\n              }\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }()); // GET route used to get workspaces that the user belongs to\n\n  workspaceRouter.get('/', /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n      var session, _yield$MySQLPool$quer, _yield$MySQLPool$quer2, rows;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              session = req.session; // Check if the user is logged in or not\n\n              if (!(session.isUserLoggedIn !== true)) {\n                _context2.next = 5;\n                break;\n              }\n\n              res.status(401).json({\n                success: false,\n                error: 'Unauthorized access'\n              });\n              _context2.next = 19;\n              break;\n\n            case 5:\n              _context2.prev = 5;\n              _context2.next = 8;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query(\"CALL GetUserWorkspaces(?,?)\", [session.userID, session.userType]);\n\n            case 8:\n              _yield$MySQLPool$quer = _context2.sent;\n              _yield$MySQLPool$quer2 = _slicedToArray(_yield$MySQLPool$quer, 1);\n              rows = _yield$MySQLPool$quer2[0];\n\n              // If a workspace ID is not set then set it now\n              if (session.workspaceID === undefined && rows[0].length > 0) {\n                session.workspaceID = rows[0][0].workspace_id;\n              }\n\n              res.json({\n                workspaces: rows[0],\n                active: session.workspaceID\n              });\n              _context2.next = 19;\n              break;\n\n            case 15:\n              _context2.prev = 15;\n              _context2.t0 = _context2[\"catch\"](5);\n              Loaders_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(_context2.t0);\n              res.status(500).json({\n                error: 'Internal server error occured'\n              });\n\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[5, 15]]);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }()); // GET route used to get all workers from a workspace\n\n  workspaceRouter.get('/workers', /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n      var session, _yield$MySQLPool$quer3, _yield$MySQLPool$quer4, rows;\n\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              session = req.session; // Check if the user is logged in or not and check if the user is a manager\n\n              if (!(session.isUserLoggedIn !== true || session.userType !== 0)) {\n                _context3.next = 5;\n                break;\n              }\n\n              res.status(401).json({\n                success: false,\n                error: 'Unauthorized access'\n              });\n              _context3.next = 18;\n              break;\n\n            case 5:\n              _context3.prev = 5;\n              _context3.next = 8;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query(\"CALL GetAllWorkspaceWorkers(?)\", [session.workspaceID]);\n\n            case 8:\n              _yield$MySQLPool$quer3 = _context3.sent;\n              _yield$MySQLPool$quer4 = _slicedToArray(_yield$MySQLPool$quer3, 1);\n              rows = _yield$MySQLPool$quer4[0];\n              res.json({\n                workers: rows[0]\n              });\n              _context3.next = 18;\n              break;\n\n            case 14:\n              _context3.prev = 14;\n              _context3.t0 = _context3[\"catch\"](5);\n              Loaders_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(_context3.t0);\n              res.status(500).json({\n                error: 'Internal server error occured'\n              });\n\n            case 18:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[5, 14]]);\n    }));\n\n    return function (_x5, _x6) {\n      return _ref4.apply(this, arguments);\n    };\n  }()); // POST route used to create a new workspace\n\n  workspaceRouter.post('/', [// Check that workspace name is of valid length\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('workspace_name').isLength({\n    min: 4,\n    max: 255\n  })], /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n      var session, validationErrors, _yield$MySQLPool$quer5, _yield$MySQLPool$quer6, rows;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              session = req.session;\n              validationErrors = Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"validationResult\"])(req).formatWith(validationErrorFormatter); // Check if the user is logged in or not and check if the user is a manager\n\n              if (!(session.isUserLoggedIn !== true || session.userType !== 0)) {\n                _context4.next = 6;\n                break;\n              }\n\n              res.status(401).json({\n                success: false,\n                error: 'Unauthorized access'\n              });\n              _context4.next = 23;\n              break;\n\n            case 6:\n              if (!(validationErrors.isEmpty() === false)) {\n                _context4.next = 10;\n                break;\n              }\n\n              res.status(422).json({\n                success: false,\n                error: 'Workspace name needs to be greater than 4 letters'\n              });\n              _context4.next = 23;\n              break;\n\n            case 10:\n              _context4.prev = 10;\n              _context4.next = 13;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query('CALL CreateNewWorkspace(?,?)', [req.body.workspace_name, session.userID]);\n\n            case 13:\n              _yield$MySQLPool$quer5 = _context4.sent;\n              _yield$MySQLPool$quer6 = _slicedToArray(_yield$MySQLPool$quer5, 1);\n              rows = _yield$MySQLPool$quer6[0];\n              res.json({\n                success: true\n              });\n              _context4.next = 23;\n              break;\n\n            case 19:\n              _context4.prev = 19;\n              _context4.t0 = _context4[\"catch\"](10);\n              Loaders_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(_context4.t0);\n              res.status(500).json({\n                error: 'Internal server error occured'\n              });\n\n            case 23:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[10, 19]]);\n    }));\n\n    return function (_x7, _x8) {\n      return _ref5.apply(this, arguments);\n    };\n  }()); // POST route used to join a workspace\n\n  workspaceRouter.post('/join', [// Check that workspace id is numeric and greater than 0\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('workspace_id').isNumeric({\n    min: 0,\n    max: undefined\n  })], /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n      var session, validationErrors, _yield$MySQLPool$quer7, _yield$MySQLPool$quer8, user_rows, _yield$MySQLPool$quer9, _yield$MySQLPool$quer10, rows;\n\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              session = req.session;\n              validationErrors = Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"validationResult\"])(req).formatWith(validationErrorFormatter); // Check if the user is logged in or not\n\n              if (!(session.isUserLoggedIn !== true)) {\n                _context5.next = 6;\n                break;\n              }\n\n              res.status(401).json({\n                success: false,\n                error: 'Unauthorized access'\n              });\n              _context5.next = 32;\n              break;\n\n            case 6:\n              if (!(validationErrors.isEmpty() === false)) {\n                _context5.next = 10;\n                break;\n              }\n\n              res.status(422).json({\n                success: false,\n                error: 'Workspace ID is invalid'\n              });\n              _context5.next = 32;\n              break;\n\n            case 10:\n              _context5.prev = 10;\n              _context5.next = 13;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query(\"CALL IsUserInWorkspace(?,?,?)\", [req.body.workspace_id, session.userID, session.userType]);\n\n            case 13:\n              _yield$MySQLPool$quer7 = _context5.sent;\n              _yield$MySQLPool$quer8 = _slicedToArray(_yield$MySQLPool$quer7, 1);\n              user_rows = _yield$MySQLPool$quer8[0];\n\n              if (!(user_rows[0][0].count > 0)) {\n                _context5.next = 20;\n                break;\n              }\n\n              res.status(400).json({\n                error: 'Already in this workspace'\n              });\n              _context5.next = 26;\n              break;\n\n            case 20:\n              _context5.next = 22;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query('CALL JoinWorkspace(?,?,?)', [req.body.workspace_id, session.userID, session.userType]);\n\n            case 22:\n              _yield$MySQLPool$quer9 = _context5.sent;\n              _yield$MySQLPool$quer10 = _slicedToArray(_yield$MySQLPool$quer9, 1);\n              rows = _yield$MySQLPool$quer10[0];\n              res.sendStatus(200);\n\n            case 26:\n              _context5.next = 32;\n              break;\n\n            case 28:\n              _context5.prev = 28;\n              _context5.t0 = _context5[\"catch\"](10);\n              Loaders_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(_context5.t0);\n              res.status(500).json({\n                error: 'Internal server error occured'\n              });\n\n            case 32:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[10, 28]]);\n    }));\n\n    return function (_x9, _x10) {\n      return _ref6.apply(this, arguments);\n    };\n  }()); // POST route used to search for a workspace\n\n  workspaceRouter.post('/search', [// Check that workspace name is of valid length\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('workspace_name').isLength({\n    min: 4,\n    max: 255\n  })], /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n      var session, validationErrors, _yield$MySQLPool$quer11, _yield$MySQLPool$quer12, rows;\n\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              session = req.session;\n              validationErrors = Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"validationResult\"])(req).formatWith(validationErrorFormatter); // Check if the user is logged in or not\n\n              if (!(session.isUserLoggedIn !== true)) {\n                _context6.next = 6;\n                break;\n              }\n\n              res.status(401).json({\n                success: false,\n                error: 'Unauthorized access'\n              });\n              _context6.next = 23;\n              break;\n\n            case 6:\n              if (!(validationErrors.isEmpty() === false)) {\n                _context6.next = 10;\n                break;\n              }\n\n              res.status(422).json({\n                success: false,\n                error: 'Workspace name needs to be greater than 4 letters'\n              });\n              _context6.next = 23;\n              break;\n\n            case 10:\n              _context6.prev = 10;\n              _context6.next = 13;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query('CALL SearchForWorkspace(?)', [\"%\".concat(req.body.workspace_name, \"%\")]);\n\n            case 13:\n              _yield$MySQLPool$quer11 = _context6.sent;\n              _yield$MySQLPool$quer12 = _slicedToArray(_yield$MySQLPool$quer11, 1);\n              rows = _yield$MySQLPool$quer12[0];\n              res.json({\n                workspaces: rows[0]\n              });\n              _context6.next = 23;\n              break;\n\n            case 19:\n              _context6.prev = 19;\n              _context6.t0 = _context6[\"catch\"](10);\n              Loaders_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(_context6.t0);\n              res.status(500).json({\n                error: 'Internal server error occured'\n              });\n\n            case 23:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[10, 19]]);\n    }));\n\n    return function (_x11, _x12) {\n      return _ref7.apply(this, arguments);\n    };\n  }()); // DELETE route used to remove a workspace\n\n  workspaceRouter[\"delete\"]('/', [// Check that workspace id is numeric and greater than 0\n  Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"check\"])('workspace_id').isNumeric({\n    min: 0,\n    max: undefined\n  })], /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n      var session, validationErrors, _yield$MySQLPool$quer13, _yield$MySQLPool$quer14, user_rows, _yield$MySQLPool$quer15, _yield$MySQLPool$quer16, rows, _yield$MySQLPool$quer17, _yield$MySQLPool$quer18, workspace_rows;\n\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              session = req.session;\n              validationErrors = Object(express_validator__WEBPACK_IMPORTED_MODULE_1__[\"validationResult\"])(req).formatWith(validationErrorFormatter); // Check if the user is logged in or not and check if the user is a manager\n\n              if (!(session.isUserLoggedIn !== true || session.userType !== 0)) {\n                _context7.next = 6;\n                break;\n              }\n\n              res.status(401).json({\n                success: false,\n                error: 'Unauthorized access'\n              });\n              _context7.next = 39;\n              break;\n\n            case 6:\n              if (!(validationErrors.isEmpty() === false)) {\n                _context7.next = 10;\n                break;\n              }\n\n              res.status(422).json({\n                success: false,\n                error: 'Workspace name needs to be greater than 4 letters'\n              });\n              _context7.next = 39;\n              break;\n\n            case 10:\n              _context7.prev = 10;\n              _context7.next = 13;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query(\"CALL IsUserInWorkspace(?,?,?)\", [req.body.workspace_id, session.userID, 0]);\n\n            case 13:\n              _yield$MySQLPool$quer13 = _context7.sent;\n              _yield$MySQLPool$quer14 = _slicedToArray(_yield$MySQLPool$quer13, 1);\n              user_rows = _yield$MySQLPool$quer14[0];\n\n              if (!(user_rows[0][0].count !== 1)) {\n                _context7.next = 20;\n                break;\n              }\n\n              res.status(401).json({\n                success: false,\n                error: 'Unauthorized access'\n              });\n              _context7.next = 33;\n              break;\n\n            case 20:\n              _context7.next = 22;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query('CALL DeleteWorkspace(?)', [req.body.workspace_id]);\n\n            case 22:\n              _yield$MySQLPool$quer15 = _context7.sent;\n              _yield$MySQLPool$quer16 = _slicedToArray(_yield$MySQLPool$quer15, 1);\n              rows = _yield$MySQLPool$quer16[0];\n              // If deleted workspace was the active workspace remove it from session\n              if (session.workspaceID == req.body.workspace_id) session.workspaceID = undefined; // Get workspaces manager belongs to\n\n              _context7.next = 28;\n              return Loaders_mysql__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query('CALL GetUserWorkspaces(?,?)', [session.userID, session.userType]);\n\n            case 28:\n              _yield$MySQLPool$quer17 = _context7.sent;\n              _yield$MySQLPool$quer18 = _slicedToArray(_yield$MySQLPool$quer17, 1);\n              workspace_rows = _yield$MySQLPool$quer18[0];\n\n              // Check if there are any workspaces at all\n              if (workspace_rows[0].length > 0 && session.workspaceID === undefined) {\n                session.workspaceID = workspace_rows[0][0].workspace_id;\n              }\n\n              res.json({\n                workspaces: workspace_rows[0],\n                active: session.workspaceID\n              });\n\n            case 33:\n              _context7.next = 39;\n              break;\n\n            case 35:\n              _context7.prev = 35;\n              _context7.t0 = _context7[\"catch\"](10);\n              Loaders_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(_context7.t0);\n              res.status(500).json({\n                error: 'Internal server error occured'\n              });\n\n            case 39:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[10, 35]]);\n    }));\n\n    return function (_x13, _x14) {\n      return _ref8.apply(this, arguments);\n    };\n  }());\n});\n\n//# sourceURL=webpack:///./server/api/routes/workspace.js?");

/***/ }),

/***/ "./server/config/index.js":
/*!********************************!*\
  !*** ./server/config/index.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var dotenv__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! dotenv */ \"dotenv\");\n/* harmony import */ var dotenv__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(dotenv__WEBPACK_IMPORTED_MODULE_1__);\n // Imports enviornment variables for use\n\n\nvar envFound = dotenv__WEBPACK_IMPORTED_MODULE_1___default.a.config();\n\nif (!envFound) {\n  // This error should crash whole process\n  throw new Error(\"⚠️  Couldn't find .env file  ⚠️\");\n}\n\nvar DIST_DIR = path__WEBPACK_IMPORTED_MODULE_0___default.a.resolve(__dirname, '../dist/');\nvar PUBLIC_DIST_DIR = path__WEBPACK_IMPORTED_MODULE_0___default.a.resolve(__dirname, '../dist/public');\nvar HTML_FILE = path__WEBPACK_IMPORTED_MODULE_0___default.a.join(DIST_DIR, 'index.html');\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  logs: {\n    level: process.env.LOG_LEVEL || 'silly'\n  },\n  api: {\n    prefix: '/api/v1/'\n  },\n  dist: {\n    path: DIST_DIR,\n    public_path: PUBLIC_DIST_DIR\n  },\n  editor: {\n    path: HTML_FILE\n  }\n});\n\n//# sourceURL=webpack:///./server/config/index.js?");

/***/ }),

/***/ "./server/loaders/express.js":
/*!***********************************!*\
  !*** ./server/loaders/express.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config */ \"./server/config/index.js\");\n/* harmony import */ var _api_apiRouter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../api/apiRouter */ \"./server/api/apiRouter.js\");\n/* harmony import */ var _api_baseRouter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../api/baseRouter */ \"./server/api/baseRouter.js\");\n/* harmony import */ var express_session__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! express-session */ \"express-session\");\n/* harmony import */ var express_session__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(express_session__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var express_mysql_session__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! express-mysql-session */ \"express-mysql-session\");\n/* harmony import */ var express_mysql_session__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(express_mysql_session__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var Loaders_mysql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! Loaders/mysql */ \"./server/loaders/mysql.js\");\n // Router routing to all the data API endpoints\n\n // Router routing to all the base functionality endpoints (login, join, logout)\n\n // Import so express session can be used\n\n // Import mysql session store\n\n // A poll of connections to MySQL database used to make queries\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (app) {\n  // Setup the MySQL session store\n  var sessionStore = new express_mysql_session__WEBPACK_IMPORTED_MODULE_4___default.a({}, Loaders_mysql__WEBPACK_IMPORTED_MODULE_5__[\"default\"]); // Setup sessions for express\n\n  app.use(express_session__WEBPACK_IMPORTED_MODULE_3___default()({\n    secret: process.env.SESSION_SECRET,\n    store: sessionStore,\n    resave: false,\n    saveUninitialized: false\n  }));\n  /**\r\n   * Health Check endpoints\r\n   * @TODO Explain why they are here\r\n   */\n\n  app.get('/status', function (req, res) {\n    res.status(200).end();\n  });\n  app.head('/status', function (req, res) {\n    res.status(200).end();\n  });\n  app.get('/', function (req, res) {\n    var session = req.session;\n\n    if (session.isUserLoggedIn === true) {\n      res.redirect('/scheduler');\n    } else {\n      res.sendFile('index.html', {\n        root: _config__WEBPACK_IMPORTED_MODULE_0__[\"default\"].dist.path\n      });\n    }\n  });\n  app.get('/scheduler', function (req, res) {\n    var session = req.session;\n\n    if (session.isUserLoggedIn === true) {\n      if (session.userType === 0) {\n        res.sendFile('manager_scheduler.html', {\n          root: _config__WEBPACK_IMPORTED_MODULE_0__[\"default\"].dist.path\n        });\n      } else if (session.userType === 1) {\n        res.sendFile('worker_scheduler.html', {\n          root: _config__WEBPACK_IMPORTED_MODULE_0__[\"default\"].dist.path\n        });\n      }\n    } else {\n      res.redirect('/');\n    }\n  });\n  app.get('/create', function (req, res) {\n    var session = req.session;\n\n    if (session.isUserLoggedIn === true && session.userType === 0) {\n      res.sendFile('new_task.html', {\n        root: _config__WEBPACK_IMPORTED_MODULE_0__[\"default\"].dist.path\n      });\n    } else {\n      res.redirect('/');\n    }\n  }); // Load API data routes\n\n  app.use(_config__WEBPACK_IMPORTED_MODULE_0__[\"default\"].api.prefix, Object(_api_apiRouter__WEBPACK_IMPORTED_MODULE_1__[\"default\"])()); // Load base functionality routes\n\n  app.use('/', Object(_api_baseRouter__WEBPACK_IMPORTED_MODULE_2__[\"default\"])());\n});\n\n//# sourceURL=webpack:///./server/loaders/express.js?");

/***/ }),

/***/ "./server/loaders/index.js":
/*!*********************************!*\
  !*** ./server/loaders/index.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./express */ \"./server/loaders/express.js\");\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger */ \"./server/loaders/logger.js\");\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// Import containing functions to load and set up the express app\n // Import Winston logger instance to log messages to console\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (/*#__PURE__*/(function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(expressApp) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return Object(_express__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(expressApp);\n\n          case 2:\n            _logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"].info('✔️ Express loaded');\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n})());\n\n//# sourceURL=webpack:///./server/loaders/index.js?");

/***/ }),

/***/ "./server/loaders/logger.js":
/*!**********************************!*\
  !*** ./server/loaders/logger.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var winston__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! winston */ \"winston\");\n/* harmony import */ var winston__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(winston__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config */ \"./server/config/index.js\");\n\n\nvar transports = [];\n\nif (false) {} else {\n  transports.push(new winston__WEBPACK_IMPORTED_MODULE_0___default.a.transports.Console({\n    format: winston__WEBPACK_IMPORTED_MODULE_0___default.a.format.combine(winston__WEBPACK_IMPORTED_MODULE_0___default.a.format.cli(), winston__WEBPACK_IMPORTED_MODULE_0___default.a.format.splat())\n  }));\n}\n\nvar LoggerInstance = winston__WEBPACK_IMPORTED_MODULE_0___default.a.createLogger({\n  level: _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].logs.level,\n  levels: winston__WEBPACK_IMPORTED_MODULE_0___default.a.config.npm.levels,\n  format: winston__WEBPACK_IMPORTED_MODULE_0___default.a.format.combine(winston__WEBPACK_IMPORTED_MODULE_0___default.a.format.timestamp({\n    format: 'YYYY-MM-DD HH:mm:ss'\n  }), winston__WEBPACK_IMPORTED_MODULE_0___default.a.format.errors({\n    stack: true\n  }), winston__WEBPACK_IMPORTED_MODULE_0___default.a.format.splat(), winston__WEBPACK_IMPORTED_MODULE_0___default.a.format.json()),\n  transports: transports\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (LoggerInstance);\n\n//# sourceURL=webpack:///./server/loaders/logger.js?");

/***/ }),

/***/ "./server/loaders/mysql.js":
/*!*********************************!*\
  !*** ./server/loaders/mysql.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var mysql2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mysql2 */ \"mysql2\");\n/* harmony import */ var mysql2__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mysql2__WEBPACK_IMPORTED_MODULE_0__);\n // This creates a pool of mysql connection that support the promis API of ES7\n\nvar MysqlPool = mysql2__WEBPACK_IMPORTED_MODULE_0___default.a.createPool({\n  host: 'localhost',\n  database: 'task_scheduler_plus',\n  waitForConnections: true,\n  connectionLimit: 10,\n  queueLimit: 0\n});\nvar PromisePool = MysqlPool.promise();\n/* harmony default export */ __webpack_exports__[\"default\"] = (PromisePool);\n\n//# sourceURL=webpack:///./server/loaders/mysql.js?");

/***/ }),

/***/ "./server/server.js":
/*!**************************!*\
  !*** ./server/server.js ***!
  \**************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ \"express\");\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var regenerator_runtime_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! regenerator-runtime/runtime */ \"regenerator-runtime/runtime\");\n/* harmony import */ var regenerator_runtime_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(regenerator_runtime_runtime__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _loaders__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./loaders */ \"./server/loaders/index.js\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./config */ \"./server/config/index.js\");\n/* harmony import */ var _loaders_logger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./loaders/logger */ \"./server/loaders/logger.js\");\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// Used to serve API requests\n\n\n\n\n\n\nvar startServer = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var app, PORT;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // Create a server instance and set up webpack settings\n            app = express__WEBPACK_IMPORTED_MODULE_0___default()(); // Allow to parse body and url in requests\n\n            app.use(express__WEBPACK_IMPORTED_MODULE_0___default.a.urlencoded({\n              extended: true\n            }));\n            app.use(express__WEBPACK_IMPORTED_MODULE_0___default.a.json()); // Use enviornment variable for port or the default port\n\n            PORT = process.env.PORT || 3000;\n            _context.next = 6;\n            return Object(_loaders__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(app);\n\n          case 6:\n            app.use(express__WEBPACK_IMPORTED_MODULE_0___default.a[\"static\"](_config__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dist.public_path, {\n              extensions: ['html']\n            })); // app.get('*', (req, res) => {\n            //   res.sendFile(config.dist.path + '/index.html');\n            // });\n            // Start server and get it to listen to incomming connections\n\n            app.listen(PORT, function (err) {\n              if (err) {\n                _loaders_logger__WEBPACK_IMPORTED_MODULE_4__[\"default\"].error(err);\n                process.exit(1);\n                return;\n              }\n\n              _loaders_logger__WEBPACK_IMPORTED_MODULE_4__[\"default\"].info(\"\\n      ################################################\\n      \\uD83D\\uDEE1\\uFE0F  Server listening on port: \".concat(PORT, \" \\uD83D\\uDEE1\\uFE0F \\n      ################################################\\n    \"));\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function startServer() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nstartServer();\n\n//# sourceURL=webpack:///./server/server.js?");

/***/ }),

/***/ "dotenv":
/*!*************************!*\
  !*** external "dotenv" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"dotenv\");\n\n//# sourceURL=webpack:///external_%22dotenv%22?");

/***/ }),

/***/ "express":
/*!**************************!*\
  !*** external "express" ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"express\");\n\n//# sourceURL=webpack:///external_%22express%22?");

/***/ }),

/***/ "express-mysql-session":
/*!****************************************!*\
  !*** external "express-mysql-session" ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"express-mysql-session\");\n\n//# sourceURL=webpack:///external_%22express-mysql-session%22?");

/***/ }),

/***/ "express-session":
/*!**********************************!*\
  !*** external "express-session" ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"express-session\");\n\n//# sourceURL=webpack:///external_%22express-session%22?");

/***/ }),

/***/ "express-validator":
/*!************************************!*\
  !*** external "express-validator" ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"express-validator\");\n\n//# sourceURL=webpack:///external_%22express-validator%22?");

/***/ }),

/***/ "mysql2":
/*!*************************!*\
  !*** external "mysql2" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"mysql2\");\n\n//# sourceURL=webpack:///external_%22mysql2%22?");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"path\");\n\n//# sourceURL=webpack:///external_%22path%22?");

/***/ }),

/***/ "regenerator-runtime/runtime":
/*!**********************************************!*\
  !*** external "regenerator-runtime/runtime" ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"regenerator-runtime/runtime\");\n\n//# sourceURL=webpack:///external_%22regenerator-runtime/runtime%22?");

/***/ }),

/***/ "winston":
/*!**************************!*\
  !*** external "winston" ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"winston\");\n\n//# sourceURL=webpack:///external_%22winston%22?");

/***/ })

/******/ });